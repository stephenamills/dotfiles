#!/usr/bin/env bash
# Automatic generated, DON'T MODIFY IT.

# @flag --ast                     generate an abstract syntax tree of nodes
# @flag -b --bare                 compile without a top-level function wrapper
# @flag -c --compile              compile to JavaScript and save as .js files
# @option -e --eval <code>        pass a string from the command line as input
# @flag -h --help                 display this help message
# @flag -i --interactive          run an interactive CoffeeScript REPL
# @option -j --join <path>        concatenate the source CoffeeScript before compiling
# @flag -l --literate             treat stdio as literate style coffeescript
# @flag -m --map                  generate source map and save as .js.map files
# @flag -M --inline-map           generate source map and include it directly in output
# @flag -n --nodes                print out the parse tree that the parser produces
# @option --nodejs <value>        pass options directly to the "node" binary
# @flag --no-header               suppress the "Generated by" header
# @option -o --output <dir>       set the output path or path/filename for compiled JavaScript
# @flag -p --print                print out the compiled JavaScript
# @option -r --require <value>    require the given module before eval or REPL
# @flag -s --stdio                listen for and compile scripts over stdio
# @flag -t --transpile            pipe generated JavaScript through Babel
# @flag --tokens                  print out the tokens that the lexer/rewriter produce
# @flag -v --version              display the version number
# @flag -w --watch                watch scripts for changes and rerun commands
# @arg file-coffee <file:.coffee>
# @arg args*

command eval "$(argc --argc-eval "$0" "$@")"