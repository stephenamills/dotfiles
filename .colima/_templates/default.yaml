# Number of CPUs to be allocated to the virtual machine.
cpu: 8

# Size of the disk in GiB to be allocated to the virtual machine.
disk: 60

# Amount of memory in GiB to be allocated to the virtual machine.
memory: 5

# Architecture of the virtual machine (host, x86_64, or aarch64).
# NOTE: this cannot be changed after the virtual machine is created.
arch: host

# Container runtime to be used (docker or containerd).
# NOTE: this cannot be changed after the virtual machine is created.
runtime: docker

# Sets a custom hostname for the virtual machine.
# Default: colima
# colima-profile_name for other profiles (?)
hostname: ""

# Kubernetes configuration for the virtual machine.
kubernetes:
  # Enable kubernetes.
  enabled: false

  # Kubernetes version to use.
  # This needs to exactly match a k3s version https://github.com/k3s-io/k3s/releases
  # Default: latest stable release
  version: v1.30.2+k3s1

  # Additional args to pass to k3s https://docs.k3s.io/cli/server
  # Default: traefik is disabled
  k3sArgs:
    - --disable=traefik

# Auto-activate on the host for client access.
# Setting to true does the following on startup
#  - sets as the active Docker context (for the Docker runtime).
#  - sets as the active Kubernetes context (if Kubernetes is enabled).
autoActivate: true

# Network configurations for the virtual machine.
network:
  # Assigns a reachable IP address to the virtual machine.
  # This is currently macOS only and ignored on Linux.
  address: false

  # Custom DNS resolvers for the virtual machine.
  #
  # EXAMPLE
  # dns: [8.8.8.8, 1.1.1.1]
  dns: []

  # DNS hostnames to resolve to custom targets using the internal resolver.
  # This setting has no effect if a custom DNS resolver list is supplied above.
  # It does not configure the /etc/hosts files of any machine or container.
  # The value can be an IP address or another host.
  #
  # EXAMPLE
  # dnsHosts:
  #   example.com: 1.2.3.4
  dnsHosts:
    host.docker.internal: host.lima.internal

# ===================================================================== #
# ADVANCED CONFIGURATION
# ===================================================================== #

# Forward the host's SSH agent to the virtual machine.
forwardAgent: false

# Docker daemon configuration that maps directly to daemon.json.
# https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-configuration-file.
# NOTE: some settings may affect Colima's ability to start docker. e.g. `hosts`.
#
# EXAMPLE - disable buildkit
# docker:
#   features:
#     buildkit: false
#
# EXAMPLE - add insecure registries
# docker:
#   insecure-registries:
#     - myregistry.com:5000
#     - host.docker.internal:5000
#
# default behavior: buildkit enabled
docker: {}

# Virtual machine type (qemu, vz)
# NOTE: this is macOS 13 only. For Linux and macOS <13.0, qemu is always used.
#
# vz is Apple's macOS virtualization framework and requires macOS 13
#
# NOTE: this cannot be changed after the virtual machine is created.
vmType: vz

# Uses Rosetta for amd64 emulation (requires an Apple Silicon Mac and vmType `vz`)
rosetta: true

# Volume mount driver for the virtual machine (virtiofs, 9p, sshfs).
#
# virtiofs is limited to macOS and vmType `vz`. It is the fastest of the options.
#
# NOTE: this cannot be changed after the virtual machine is created.
mountType: virtiofs

# Propagate inotify file events to the VM.
# NOTE: this is experimental.
mountInotify: false

# The CPU type for the virtual machine (requires vmType `qemu`).
# Options available for host emulation can be checked with: `qemu-system-$(arch) -cpu help`.
# Instructions are also supported by appending to the cpu type e.g. "qemu64,+ssse3".
# Default: host
cpuType: host

# Custom provision scripts for the virtual machine.
# Provisioning scripts are executed on startup and therefore needs to be idempotent.
#
# EXAMPLE - script executed as root
# provision:
#   - mode: system
#     script: apt-get install htop vim
#
# EXAMPLE - script executed as user
# provision:
#   - mode: user
#     script: |
#       [ -f ~/.provision ] && exit 0;
#       echo provisioning as $USER...
#       touch ~/.provision
#
# Default: []
provision: []

# Automatically modifiy ~/.ssh/config to include an SSH config for the virtual machine.
# SSH config will still be generated in $COLIMA_HOME/ssh_config regardless.
sshConfig: true

# The port number for the SSH server for the virtual machine.
# When set to 0, a random available port is used.
sshPort: 0

# Configure volume mounts for the virtual machine. Colima mounts the user's home
# directory by default to provide a familiar user experience.
#
# EXAMPLE
# mounts:
#   - location: ~/secrets
#     writable: false
#   - location: ~/projects
#     writable: true
#
# Colima default behavior: $HOME and /tmp/colima are mounted as writable.
# Default: []
mounts: []

# Environment variables for the virtual machine.
#
# EXAMPLE
# env:
#   KEY: value
#   ANOTHER_KEY: another value
#
# Default: {}
env: {}
