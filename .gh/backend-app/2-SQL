SQLite
https://github.com/sqlite/sqlite # SQLite database

https://github.com/harelba/q # q - Run SQL directly on delimited files and multi-file sqlite databases
https://github.com/dbcli/litecli # CLI for SQLite Databases with auto-completion and syntax highlighting

https://github.com/lerocha/chinook-database # Sample database for SQL Server, Oracle, MySQL, PostgreSQL, SQLite, DB2
https://github.com/tthibo/sql-tutorial # A Gentle Introduction to SQL Using SQLite
https://github.com/render-examples/strapi-sqlite # Deploy Strapi with SQLite on Render
https://github.com/aaemnnosttv/wp-sqlite-db # A single file drop-in for using a SQLite database with WordPress. Based on the original SQLite Integration plugin.
https://github.com/expo/examples/ # Example projects of how to use Expo APIs
https://github.com/geshan/nodejs-sqlite # Node.js and SQLIte example for a blog post
https://github.com/ptyadana/sql-data-analysis-and-visualization-projects # SQL data analysis & visualization projects
https://github.com/remix-run/indie-stack # The Remix Stack for deploying to Fly with SQLite, authentication, testing, linting, formatting, etc.

https://github.com/learn-co-curriculum/python-p3-setting-up-sqlite
https://github.com/learn-co-curriculum/python-p3-writing-db-commands-to-a-file
https://github.com/learn-co-curriculum/dsc-intro-to-sqlite
https://github.com/learn-co-curriculum/sql-v3-database-basics
https://github.com/learn-co-curriculum/python-p3-database-basics # alter table
https://github.com/learn-co-curriculum/ds_course1_week1_module1_sqlselectlab
https://github.com/learn-co-curriculum/ds_course1_week1_module2_sqlqueries
https://github.com/learn-co-curriculum/ds_course1_week1_module3_sqltables
https://github.com/learn-co-curriculum/ds_course1_week1_module4_sqlpandas
https://github.com/learn-co-curriculum/dsc-sql-summative-lab
https://github.com/learn-co-curriculum/python-p3-sql-queries
https://github.com/learn-co-curriculum/python-p3-sql-crud

https://github.com/dogsheep/github-to-sqlite # Save data from GitHub to a SQLite database
https://github.com/cldellow/sqlite-parquet-vtable # A SQLite vtable extension to read Parquet files
https://github.com/phiresky/sql.js-httpvfs # Hosting read-only SQLite databases on static file hosters like Github Pages
https://github.com/proofrock/ws4sqlite # Query sqlite via json+http

https://github.com/inloop/sqlite-viewer # View SQLite file online
https://github.com/lana-k/sqliteviz # Instant offline SQL-powered data visualisation in your browser
https://github.com/asg017/sqlite-vec # A vector search SQLite extension that runs anywhere!
https://github.com/techouse/sqlite3-to-mysql # Transfer data from SQLite to MySQL
https://github.com/thombashi/sqlitebiter # Convert data formats such as CSV a SQLite database file.
https://github.com/avinassh/fast-sqlite3-inserts # Some bunch of test scripts to generate a SQLite DB with 1B rows in fastest possible way
https://github.com/nalgeon/redka # Redis re-implemented with SQLite
https://github.com/nalgeon/sqlean # The ultimate set of SQLite extensions
https://github.com/simonw/csvs-to-sqlite # Convert CSV files into a SQLite database
https://github.com/tengla/sqlite3-to-mysql # Make an Sqlite3 export MySQL readable.
https://github.com/aergoio/litetree # SQLite with Branches
https://github.com/nalgeon/sqlime # Online SQLite playground
https://github.com/dpapathanasiou/simple-graph # This is a simple graph database in SQLite, inspired by "SQLite as a document database"
https://github.com/k3s-io/kine # Run Kubernetes on MySQL, Postgres, sqlite, dqlite, not etcd.
https://github.com/WordPress/sqlite-database-integration # Feature Plugin to add SQLite support to WordPress. Under Development.
https://github.com/shuebener/sqlitecompare # Utility for comparing two SQLite database files for both structure and data
https://github.com/stokry/wp-sqlite # WordPress running on an SQLite database

MySQL

Vitess
https://github.com/vitessio/vitess # Vitess is a database clustering system for horizontal scaling of MySQL.
https://github.com/vitessio/vitess-operator # DEPRECATED: Vitess Operator provides automation that simplifies the administration of Vitess clusters on Kubernetes.
https://github.com/vitessio/arewefastyet # Automated Benchmarking System for Vitess
https://github.com/vitessio/messages # Vitess messages client
https://github.com/vitessio/vitess-tester #

https://github.com/planetscale/cli # The CLI for PlanetScale Database
https://github.com/planetscale/fast_page # Blazing fast pagination for ActiveRecord with deferred joins ‚ö°Ô∏è
https://github.com/planetscale/vitess-operator # Kubernetes Operator for Vitess
https://github.com/planetscale/nextjs-planetscale-starter # A Next.js starter app with NextAuth.js (Auth), Prisma (ORM), and PlanetScale (database), ready to be deployed on Netlify
https://github.com/planetscale/nextjs-starter # Next.js starter application using Prisma to connect to PlanetScale
https://github.com/planetscale/schemadiff # Declarative schema diffing, normalization, validation and manipulation via command line
https://github.com/planetscale/planetscale_rails # Make Rails schema migrations easy with PlanetScale
https://github.com/planetscale/connection-examples # A collection of PlanetScale connection examples
https://github.com/planetscale/activerecord-sql_commenter # Rails query logging compatible with sqlcommenter
https://github.com/planetscale/nextjs-conf-2021 # The code from "Databases as Code with PlanetScale and Prisma" talk at Next.js Conf 2021
https://github.com/planetscale/planetscale-ruby # Ruby client for PlanetScale databases
https://github.com/planetscale/express-example # Example Express.js app connecting to PlanetScale
https://github.com/planetscale/setup-pscale-action # Setup the PlanetScale CLI for GitHub Actions
https://github.com/planetscale/boost-beta # Welcome to the PlanetScale Boost Private Beta
https://github.com/planetscale/create-branch-action # A GitHub Action that creates a new branch of your PlanetScale database
https://github.com/planetscale/figma-diagram-generator # Code to go along with the figma DB diagram creator video
https://github.com/planetscale/database-js-starter # A sample Node.js application that uses the database-js package.
https://github.com/planetscale/planetscale-nestjs # Starter application demonstrating how to connect a NestJS API to a PlanetScale MySQL database
https://github.com/planetscale/planetpets # A demo application that uses PlanetScale OAuth v2 to access users' databases and organizations.
https://github.com/planetscale/django_psdb_engine # Disable foreign key constraints in Django
https://github.com/planetscale/airbyte-source # Airbyte source for PlanetScale databases
https://github.com/planetscale/deploy-deploy-request-action # A GitHub Action that deploys an existing deploy request of your PlanetScale database
https://github.com/planetscale/laravel-example # Sample application showing how to integrate Laravel with PlanetScale
https://github.com/planetscale/cloudflare-workers-quickstart # A sample repository demonstrating how to use PlanetScale with CloudFlare Workers.
https://github.com/planetscale/vitess-framework-testing # Validating Vitess across clients and frameworks.
https://github.com/planetscale/django-example # Connect a sample Django application to PlanetScale
https://github.com/planetscale/terraform-provider-planetscale # Terraform provider for PlanetScale
https://github.com/planetscale/laravel-crud-mysql #
https://github.com/planetscale/sysbench # A fork of sysbench to add Vitess specific Modifications
https://github.com/planetscale/singer-tap # Singer.io tap for extracting PlanetScale data
https://github.com/planetscale/vercel-integration-example #
https://github.com/planetscale/10-minute-app # Set up a stateful app fast
https://github.com/planetscale/go-planetscale-products #
https://github.com/planetscale/create-deploy-request-action # A GitHub Action that creates a new deploy request for your PlanetScale database
https://github.com/planetscale/psdbproxy # MySQL proxy for local connections to a PlanetScale database over HTTP/2
https://github.com/planetscale/scoop-bucket # Scoop bucket for PlanetScale CLI binaries.
https://github.com/planetscale/vault-gcp-creds-buildkite-plugin # Retrieve time-limited oauth2 access token for an impersonated account from a Hashicorp Vault GCP Secrets Backend
https://github.com/planetscale/pscale-workflow-helper-scripts #
https://github.com/planetscale/golang-example #
https://github.com/planetscale/create-branch-password-action # A GitHub Action that creates a new password for your PlanetScale database branch
https://github.com/planetscale/fivetran-source # PlanetScale Source connector for FiveTran
https://github.com/planetscale/mysql-for-python-developers #
https://github.com/planetscale/symfony-example # Connect a sample Symfony app to PlanetScale
https://github.com/planetscale/ps-prechecks #
https://github.com/planetscale/log # ü™µ üìì PlanetScale's opinionated structured logging library
https://github.com/planetscale/php-example # Connect a sample PHP project to a PlanetScale database.
https://github.com/planetscale/heroku-buildpack-planetscale # A Heroku Buildpack for adding Planetscale CLI to your project
https://github.com/planetscale/golang-example-gin #
https://github.com/planetscale/transmission # Write data to MySQL. Quickly.
https://github.com/planetscale/kubeconform-buildkite-plugin # Run kubeconform against your Kubernetes configurations
https://github.com/planetscale/laravel-caching # Sample repo for Laravel caching blog post
https://github.com/planetscale/psdb #
https://github.com/planetscale/vitess-types # Protobuf types extracted from Vitess
https://github.com/planetscale/k8s-demo # A simple demo of Vitess on Kubernetes
https://github.com/planetscale/django-react-demo #
https://github.com/planetscale/go-bookings-api # An API written in Go simulating a travel booking agency.
https://github.com/planetscale/aws-connection-strings-example #
https://github.com/planetscale/vault-oidc-auth-buildkite-plugin # Authenticate to Hashicorp Vault with Buildkite OIDC (JWT) tokens.
https://github.com/planetscale/vault-aws-creds-buildkite-plugin # Retrieve time-limited AWS credentials from a Hashicorp Vault AWS Secrets Backend
https://github.com/planetscale/kustomize-utils # Collection of commands and libraries for kustomize
https://github.com/planetscale/vitess-builder #
https://github.com/planetscale/cloud-pak-for-data #
https://github.com/planetscale/telemetry-buildkite-plugin #
https://github.com/planetscale/gateslap # Utility for generating traffic for VTGate
https://github.com/planetscale/docker-login-gcr-buildkite-plugin # Login to Google Cloud Docker registries (GCR + GAR) with the docker-credential-gcr utility
https://github.com/planetscale/go-logkeycheck # Ensure zap log field names are consistent

https://github.com/debezium/debezium-connector-vitess # An incubating Debezium CDC connector for Vitess
https://github.com/jvaidya/vitess-tools # Vitess Tools
https://github.com/pixelfederation/vitess-php-pdo # A pure php implementation of the PDO interface for Vitess (vitess.io)
https://github.com/depot/kysely-planetscale # A Kysely dialect for PlanetScale Serverless
https://github.com/aquarapid/vitess_examples #
https://github.com/voxoco/vitess-demo # Vitess on GKE
https://github.com/marshallswain/vitesse-feathers-pinia-example # A Feathers-Pinia example showing pagination and filtering with useFind
https://github.com/rerorero/vitess-playground #
https://github.com/serhatcetinkaya/vitess-consul-poc #
https://github.com/revilon1991/vitess-cluster # MySQL Sharding via Vitess in docker containers
https://github.com/janpio/vitess-framework-testing # Validating Vitess across clients and frameworks.
https://github.com/percona-lab/vitess-tpcc-lab #
https://github.com/frouioui/tagenal # Tagenal is a playground app using Vitess, Redis, Traefik and Jaeger on Kubernetes
https://github.com/quizofkings/marco # A service that aggregates Vitess statistics for Prometheus
https://github.com/conduitio-labs/conduit-connector-vitess # Conduit connector for Vitess
https://github.com/mattlord/vtmanager # Tool for managing container based Vitess deployments for testing purposes
https://github.com/phanatic/opa-benchmark # Repository to hold benchmark tests for using Open Policy Agent (OPA) for authorizing Vitess queries.
